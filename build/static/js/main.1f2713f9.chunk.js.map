{"version":3,"sources":["services/persons.js","components/App.js","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","get","id","delete","console","log","put","Notification","message","mType","className","content","MainTitle","titleStyle","color","titleColor","style","FilterComp","filter","handleFilterChange","value","onChange","FilteredNames","fpersons","setPersons","setFilteredPersons","persons","map","curr_person","key","name","number","onClick","window","confirm","personService","person","NewNameComp","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","App","useState","setTitleColor","setNewName","setNewNumber","setFilter","filteredPersons","iniMessage","setMessage","setTimeout","useEffect","length","tempMessage","tmessage","mstime","event","target","includes","preventDefault","nameObject","concat","targetId","catch","checkName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f2713f9.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst initGet = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteId = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateId = (id,newObject) => {\r\n    console.log(id,newObject)\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\n\r\nexport default {create,initGet,deleteId,updateId}\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from '../services/persons'\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  if (message.mType=== \"success\"){\n    return (\n      <div className=\"greenmessage\">\n        {message.content}\n      </div>\n    )\n  }\n  if (message.mType=== \"error\"){\n    return (\n      <div className=\"redmessage\">\n        {message.content}\n      </div>\n    )\n  }\n}\n\nconst MainTitle = ({titleColor}) => {\n  const titleStyle = {\n    color: titleColor,\n  }\n  return(\n    <h1 style={titleStyle}>Phonebook</h1>\n  )\n}\n\nconst FilterComp = ({filter,handleFilterChange}) => {\n\n  return(\n    <input\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  )\n}\n\nconst FilteredNames = ({fpersons,setPersons,setFilteredPersons,persons}) => {\n\n  return (\n    <div>\n      <ul>\n        {fpersons.map(curr_person => \n          <li key={curr_person.name}>\n            {curr_person.name} {curr_person.number}\n            <button onClick={() => {\n              if (window.confirm(\"Do you really want to delete?\")) { \n                personService\n                  .deleteId(curr_person.id)\n                  .then(() => {\n                    setPersons(persons.filter(person => person.id !== curr_person.id))\n                    setFilteredPersons(fpersons.filter(person => person.id !== curr_person.id))\n                  })\n              }\n            }}>delete</button>\n          </li>\n        )}\n      </ul>\n     </div>\n  )\n}\n\nconst NewNameComp = ({addName,newName,handleNameChange,newNumber,handleNumberChange}) => {\n\n  return(\n    <form onSubmit={addName}>\n    <p>name:</p>\n    <input\n      value={newName}\n      onChange={handleNameChange}\n    />\n    <p>number:</p>\n    <input\n      value={newNumber}\n      onChange={handleNumberChange}\n    />\n    <button type=\"submit\">save</button>\n    </form>  \n  )\n}\n\nconst App = () => {\n  const [ titleColor, setTitleColor ] = useState('green')\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas',\n      number: '112233' }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ filteredPersons, setFilteredPersons ] = useState(persons)\n  const iniMessage={\n    content:\"Page loaded successfully\",\n    mType: \"success\"\n  }\n  const [ message, setMessage] = useState(iniMessage)\n\n  setTimeout(() => {\n    if (titleColor==='green'){setTitleColor('red')}\n    else if (titleColor==='red'){setTitleColor('green')}\n  }, 500);\n\n    \n  useEffect(() => {\n    console.log('effect')\n    personService\n      .initGet()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response)\n        setFilteredPersons(response)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const tempMessage = (tmessage,mstime)=>{\n    setMessage(tmessage)\n    setTimeout(() => {setMessage(null)}, mstime)\n  }\n\n  const checkName = (nameObject) => {\n\n    if (persons.filter(person => person.name===nameObject.name).length === 0){ \n      setPersons(persons.concat(nameObject))\n      setNewName('')\n      setFilteredPersons(filteredPersons.concat(nameObject)) \n\n      personService\n      .create(nameObject)\n      .then(response => {\n        setPersons(persons.concat(response))\n        tempMessage({\n          content:\"New name added to list\",\n          mType: \"success\"\n          } \n          ,5000)\n      })\n    \n    }\n    else{\n      const targetId=persons.filter(person => person.name===nameObject.name)[0].id\n      if (window.confirm(\n        `${nameObject.name} already existing, do you want to update the phone number?`)){\n          personService\n            .updateId(targetId,nameObject)\n            .then(response => {\n              setPersons(persons.map(person => person.id !== targetId ? person : response))\n              setFilteredPersons(filteredPersons.map(person => person.id !== targetId ? person : response))\n              tempMessage({\n                content: \"Phone number was successfully updated\",\n                mType: \"success\"\n              }\n              ,5000)\n            })\n            .catch(() => {\n              tempMessage({\n                content:`This person: '${nameObject.name}', was already removed from server`,\n                mType: \"error\"\n                } \n                ,5000)\n              setPersons(persons.filter(person => person.name !== nameObject.name))\n              console.log(persons.filter(person => person.id !== nameObject.id))\n              setFilteredPersons(filteredPersons.filter(person => person.name !== nameObject.name))\n            })\n\n        }\n    }     \n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    checkName(nameObject,persons)\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n    setFilteredPersons(persons.filter(person => \n      person.name.includes(event.target.value)))\n  }\n  setTimeout(() => {\n    if (message===iniMessage){setMessage(null)}\n  }, 5000)\n\n  return (\n    <div>\n      <MainTitle\n        titleColor={titleColor}\n      />\n      <Notification message={message} />\n        <p>Filter by name</p>\n        <FilterComp\n          filter={filter}\n          handleFilterChange={handleFilterChange}\n        />\n\n      <h2>Add new</h2>\n        <NewNameComp \n          addName={addName}\n          newName={newName}\n          handleNameChange={handleNameChange}\n          newNumber={newNumber}\n          handleNumberChange={handleNumberChange}\n        />\n   \n      <h2>Numbers</h2>\n      <FilteredNames\n        fpersons={filteredPersons}\n        setPersons={setPersons}\n        setFilteredPersons={setFilteredPersons}\n        persons={persons}\n        />\n    </div>\n  )\n\n  \n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}